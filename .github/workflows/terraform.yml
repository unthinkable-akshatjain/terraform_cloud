name: terraform-automation

on: 
  push:
    paths:
    - 'terraform_modules/**'

concurrency: 
  group: ${{ github.action == 'terraform-automation' }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash
    working-directory: ./terraform_modules

jobs:
  terraform_plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name != 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@master
      
      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@master
        with:
          version: 'latest'
          service_account_email: ${{ secrets.aws_access_key_id }}
          service_account_key: ${{ secrets.aws_secret_access_key }}
          export_default_credentials: true

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        continue-on-error: true
        run: |
          chmod +x "${GITHUB_WORKSPACE}/.github/workflows/tf_init.sh"
          "${GITHUB_WORKSPACE}/.github/workflows/tf_init.sh"
          chmod +x "${GITHUB_WORKSPACE}/.github/workflows/tf_fmt.sh"
          "${GITHUB_WORKSPACE}/.github/workflows/tf_fmt.sh"
          chmod +x "${GITHUB_WORKSPACE}/.github/workflows/tf_plan_check.sh"
          "${GITHUB_WORKSPACE}/.github/workflows/tf_plan_check.sh"
          
          terraform plan -out "tf_plan" -input=false
      - name: Upload TF Plan
        uses: actions/upload-artifact@v2
        with:
          name: tf_plan
          path: ./terraform_modules/tf_plan
          if-no-files-found: error
          retention-days: 1

  terraform_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: terraform_plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: tf_apply

    steps: 
    - name: Checkout
      uses: actions/checkout@master

    - name: Setup GCP Service Account
      uses: google-github-actions/setup-gcloud@master
      with:
        version: 'latest'
        service_account_email: ${{ secrets.aws_access_key_id }}
        service_account_key: ${{ secrets.aws_secret_access_key }}
        export_default_credentials: true

    - name: Download TF Plan
      uses: actions/download-artifact@v2
      with:
        name: tf_plan
        path: ./terraform_modules

    # Provision resources via Terraform        
    - name: Terraform Apply
      run: |
        chmod +x "${GITHUB_WORKSPACE}/.github/workflows/tf_init.sh"
        "${GITHUB_WORKSPACE}/.github/workflows/tf_init.sh"
        terraform show "tf_plan"
        terraform apply "tf_plan"
